{"ast":null,"code":"var _jsxFileName = \"/home/doug/Documentos/ProjetosGitHub/movie-card-library-crud/movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setAPI = () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      this.setState({\n        loading: true\n      }, () => {\n        movieAPI.getMovie(id).then(data => {\n          this.setState({\n            movies: data,\n            loading: false\n          });\n        });\n      });\n    };\n\n    this.deleteMovie = () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      movieAPI.deleteMovie(id).then(() => {\n        this.setState({\n          redirect: true\n        });\n      });\n    };\n\n    this.state = {\n      movies: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setAPI();\n  }\n\n  render() {\n    // Change the condition to check the state\n    const {\n      loading,\n      movies,\n      redirect\n    } = this.state;\n    if (loading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    });\n    if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }\n    });\n    const {\n      id,\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = movies;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"movieList-contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieCard\",\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imgMoviesDetails\",\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, `Subtitle: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"storyline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonsDetails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"edit\",\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"back\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"delete\",\n      to: \"/\",\n      onClick: this.deleteMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"DELETAR\"))));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/doug/Documentos/ProjetosGitHub/movie-card-library-crud/movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","Link","Redirect","movieAPI","Loading","MovieDetails","constructor","props","setAPI","match","params","id","setState","loading","getMovie","then","data","movies","deleteMovie","redirect","state","componentDidMount","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setAPI();\n  }\n\n  setAPI = () => {\n    const { match: { params: { id } } } = this.props;\n    this.setState({ loading: true }, () => {\n      movieAPI.getMovie(id).then((data) => {\n        this.setState({ movies: data, loading: false });\n      });\n    });\n  }\n\n  deleteMovie = () => {\n    const { match: { params: { id } } } = this.props;\n    movieAPI.deleteMovie(id).then(() => {\n      this.setState({\n        redirect: true,\n      });\n    });\n  }\n\n  render() {\n    // Change the condition to check the state\n    const { loading, movies, redirect } = this.state;\n    if (loading) return <Loading />;\n    if (redirect) return <Redirect />;\n\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = movies;\n    return (\n      <section className=\"movieList-contain\">\n        <div className=\"movieCard\" data-testid=\"movie-details\">\n          <img className=\"imgMoviesDetails\" alt=\"Movie Cover\" src={ `../${imagePath}` } />\n          <p>{ `Subtitle: ${title}` }</p>\n          <p>{ `Subtitle: ${subtitle}` }</p>\n          <p className=\"storyline\">{ `Storyline: ${storyline}` }</p>\n          <p>{ `Genre: ${genre}` }</p>\n          <p>{ `Rating: ${rating}` }</p>\n          <div className=\"buttonsDetails\">\n            <Link className=\"edit\" to={ `/movies/${id}/edit` }>EDITAR</Link>\n            <Link className=\"back\" to=\"/\">VOLTAR</Link>\n            <Link className=\"delete\" to=\"/\" onClick={ this.deleteMovie }>DELETAR</Link>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}